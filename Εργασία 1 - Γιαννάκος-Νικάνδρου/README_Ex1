Στην παρούσα εργασία δουλεψαμε εξ αποστάσεως τόσο σύχρονα όσο και ασύχρονα. 
Λόγω των καθημερινών μας προγραμμάτων μπορούσαμε να υλοποιούμε ένα μέρος της εργασίας 
και έπειτα να το αποστέλουμε στον άλλον ώστε να συνεχίσει από εκείνο το σημείο. 
Υπήρχαν βέβαια και μέρες που κάναμε και βιντεοκλήσεις με τον έναν να κάνει διαμοιρασμό οθόνης. 

Ο Δημήτρης δημιούργησε τις συναρτήσεις angle_between_points και την output_json καθώς 
και μία πρωτη μορφή των συναρτήσεων add_steiner_point_on_edge και triangulation στις οποίες 
έπειτα παρενέβηκε και ο Νικόλας προσθέτοντας κυρίως περισσότερους ελέγχους αλλά και επιπλέον 
πράγματα όπως πχ η προσθήκη της attempt_to_flip μεσα στην triangulation. 

O Νικόλας δημιούργησε τις συναρτήσεις read_json_file, check_cdt_validity και attempt_to_flip 
και πρόσθεσε όπως προείπαμε κομμάτια ελέγχου στις συναρτήσεις που εφτιαξε ο Δημήτρης αλλά και πολυ 
σημαντικότερα στην triangulation. Ακόμα εφτιαξε την main και γενικα το πρώτο template που 
αλληλοστέλναμε μεταξύ μας.

angle_between_points:
Η συνάρτηση angle_between_points υπολογίζει την γωνία που σχηματίζεται από τρία σημεία 
p1, p2 και p3 και την επιστρέφει σε μοίρες. Αρχικά δημιουργούνται δυο διανυσματα 
v1 (ξεκιναει απο το p1 προς το p2) και v2 (ξεκιναει απο το p1 προς το p3). Επειτα υπολογιζει 
το εσωτερικο γινόμενο καθως και το μετρο των v1, v2 διανυσματων. υπολογιζει το συνημιτονιο 
της γωνιας που μετατρεπεται επειτα σε μοιρες.

output_json:
Η συνάρτηση output_json γράφει τα δεδομένα σε json αρχείο. Αρχικά std::ostringstream 
κατασκευάζει την json συμβολοσειρά και επιτρέπει την συνθεση κειμενου. Επειτα προσθετω content_type
και instance_uid καθως και τα σημεία steiner τοσο των x αλλα και των y συντεταγμένων.
Τελος δημιουργω ένα ζεύγος για κάθε ακμή το οποιο το εμφανιζω.

main:
Στην main δεν γινοντε πολλά κυρίως επιλεγει το αρχείο για dataset. Εκεί γινεται ενας έλεγχος για
επιτυχημένη έξοδο της συνάρτησης που κάνει το διάβασμα του αρχείου, στην οποία περίπτωση θα τυπώσει
τους πίνακες που διαβαστήκαν απο το json (το dataset). Ακολούθως καλείται η triangulation
η οποία επιστρέφει το τελικό CDT που χρησιμοποειτε απο την create_json_output για να δημιουργηθεί
το output.json.

read_json_file:
Η read_json_file χρησιμοποιείtαι τα για να διαβάσει μέσω της read_json της boost το dataset json αρχείο.
Με την get_child της boost τοποθετούνται τα καταλληλα points x και y, τα καταλληλα region_boundary κτλπ
στα καταλληλα ptrees (sections της json).

check_cdt_validity:
Ελέγχει το CDT περνώντας απο όλα τα τρίγωνα ελέγχοντας αν ειναι valid.

attempt_to_flip:
Εδω γίνετε ο έλεγχος αν το CDT είναι οκέι να γέινει το φλιπ στην γωνία όπου έχει βρεθεί αμβλυγώνια
γωνία. Αρχικά μεταφερετε το CDT σε ένα copied_cdt όπου θα γινούν οθ ελέγχοι. Τότε ελέγχονται τα 
Τρίγωνα που πρόκειται να επιρεαστούν, αφού γίνει το φλιπ ελέγχετε το CDT με το check_cdt_validity και
μετά τα 2 νέα τρίγωνα ελέγχονται αν είναι αμβλυγώνια. Αναλόγος οι αλλαγές στο copied_cdt θα μεταφερθούν
στο cdt αλλιώς οι συνάρτηση κάνει return χωρίς αλλαγές στο triangulation.

add_steiner_point_on_edge:
Μετά απο μερικούς validation ελέγχους, υπολογίζεται το steiner point χρησιμοποιόντας το Επίκεντρο,
αν αποτύχει η μέθοδος με το Επίκεντρο, θα δημιουργηθεί με το midpoint. Γίνετε έλεγχος κατά πόσο το
σημείο που προσθέτετε υπάρχει ήδη στο CDT, αν υπάρχει ήδη το προγραμμα συνεχίζει κανοντας skip αυτο το
τρίγωνο.

triangulation:
Προσθέτει τα σημεία στο CDT της CGAL, πραγματοποιώντας έλεγχο εγκυρότητας μετά από κάθε εισαγωγή σημείου.
Οι ακμές από το region_boundary εισάγονται στο CDT για να ορίσουν την περιοχή της τριγωνοποίησης.
Η συνάρτηση υπολογίζει τις γωνίες για κάθε τρίγωνο του CDT και ελέγχει αν όλες είναι μικρότερες από 90
μοίρες. Αν μια γωνία είναι μεγαλύτερη από 90 μοίρες, γίνεται προσπάθεια αναστροφής ακμών για βελτίωση των γωνιών.
(Έμεινε commented out, προκαλουσε segfaut). Αν η αναστροφή δεν επιτυγχάνε, προστίθεται σημείο Steiner 
στο κέντρο του περιγεγραμμένου(Circumcenter) κύκλου ή στο μέσο της ακμής.
Η διαδικασία επαναλαμβάνεται έως ότου όλες οι γωνίες να είναι μικρότερες από 90 μοίρες,
και το CDT επιστρέφεται ως αποτέλεσμα για να χρησιμοποειθεί στην output_json.

Όδηγιες μεταγλώττισης:
Τρέχετε το Makefile:
make
και μετα το πρόγραμμα
./main

Νικολας Νικανδρου, sdi1800224
Δημήτριος Γιαννάκος-Καίσαρης, sdi1900315
